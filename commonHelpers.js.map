{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '43935418-e568f8ae63502e120d68b032c';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (query, page = 1) => {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page: page,\n    per_page: 15,\n  };\n\n  try {\n    const response = await axios.get(BASE_URL, { params });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch images');\n  }\n};\n\n","export const clearGallery = () => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n};\n\nexport const renderImages = (images) => {\n  const gallery = document.querySelector('.gallery');\n  const markup = images\n    .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n      return `\n        <li class=\"gallery-item\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p><b>Likes</b> ${likes}</p>\n            <p><b>Views</b> ${views}</p>\n            <p><b>Comments</b> ${comments}</p>\n            <p><b>Downloads</b> ${downloads}</p>\n          </div>\n        </li>\n      `;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n};\n\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImages, clearGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('#search-form');\nconst loader = document.querySelector('#loader');\nconst loadMoreBtn = document.querySelector('#load-more');\n\nlet currentPage = 1;\nlet currentQuery = '';\n\nconst lightbox = new SimpleLightbox('.gallery a');\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  currentQuery = e.currentTarget.elements.query.value.trim();\n  if (currentQuery === '') {\n    iziToast.error({ title: 'Error', message: 'Search query cannot be empty!' });\n    return;\n  }\n\n  clearGallery();\n  currentPage = 1;\n  loadMoreBtn.classList.add('hidden'); // Hide Load more button on new search\n  fetchAndRenderImages();\n});\n\nloadMoreBtn.addEventListener('click', () => {\n  currentPage += 1;\n  fetchAndRenderImages();\n});\n\nconst fetchAndRenderImages = async () => {\n  loader.classList.remove('hidden');\n\n  try {\n    const data = await fetchImages(currentQuery, currentPage);\n    if (data.hits.length === 0 && currentPage === 1) {\n      iziToast.warning({ title: 'No Results', message: 'Sorry, there are no images matching your search query. Please try again!' });\n    } else {\n      renderImages(data.hits);\n      if (currentPage * 15 >= data.totalHits) {\n        loadMoreBtn.classList.add('hidden');\n        iziToast.info({ title: 'End of Results', message: \"We're sorry, but you've reached the end of search results.\" });\n      } else {\n        loadMoreBtn.classList.remove('hidden'); // Show Load more button only if there are more results\n      }\n      lightbox.refresh();\n      smoothScroll();\n    }\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: error.message });\n  } finally {\n    loader.classList.add('hidden');\n  }\n};\n\nconst smoothScroll = () => {\n  const { height: cardHeight } = document.querySelector('.gallery').firstElementChild.getBoundingClientRect();\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n};\n\n\n\n\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","params","axios","clearGallery","gallery","renderImages","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","loader","loadMoreBtn","currentPage","currentQuery","lightbox","SimpleLightbox","iziToast","fetchAndRenderImages","data","smoothScroll","error","cardHeight"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAc,MAAOC,EAAOC,EAAO,IAAM,CACpD,MAAMC,EAAS,CACb,IAAKL,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAU,EACd,EAEE,GAAI,CAEF,OADiB,MAAME,EAAM,IAAIL,EAAU,CAAE,OAAAI,CAAM,CAAE,GACrC,IACjB,MAAe,CACd,MAAM,IAAI,MAAM,wBAAwB,CACzC,CACH,ECtBaE,EAAe,IAAM,CAChC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,EAEaC,EAAgBC,GAAW,CACtC,MAAMF,EAAU,SAAS,cAAc,UAAU,EAC3CG,EAASD,EACZ,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,KAC1D;AAAA;AAAA,qBAEQL,CAAa;AAAA,wBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,8BAGpBC,CAAK;AAAA,8BACLC,CAAK;AAAA,iCACFC,CAAQ;AAAA,kCACPC,CAAS;AAAA;AAAA;AAAA,OAItC,EACA,KAAK,EAAE,EACVV,EAAQ,mBAAmB,YAAaG,CAAM,CAChD,EClBMQ,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAc,SAAS,cAAc,YAAY,EAEvD,IAAIC,EAAc,EACdC,EAAe,GAEnB,MAAMC,EAAW,IAAIC,EAAe,YAAY,EAEhDN,EAAK,iBAAiB,SAAU,MAAO,GAAM,CAG3C,GAFA,EAAE,eAAc,EAChBI,EAAe,EAAE,cAAc,SAAS,MAAM,MAAM,OAChDA,IAAiB,GAAI,CACvBG,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,+BAA+B,CAAE,EAC3E,MACD,CAEDnB,IACAe,EAAc,EACdD,EAAY,UAAU,IAAI,QAAQ,EAClCM,GACF,CAAC,EAEDN,EAAY,iBAAiB,QAAS,IAAM,CAC1CC,GAAe,EACfK,GACF,CAAC,EAED,MAAMA,EAAuB,SAAY,CACvCP,EAAO,UAAU,OAAO,QAAQ,EAEhC,GAAI,CACF,MAAMQ,EAAO,MAAM1B,EAAYqB,EAAcD,CAAW,EACpDM,EAAK,KAAK,SAAW,GAAKN,IAAgB,EAC5CI,EAAS,QAAQ,CAAE,MAAO,aAAc,QAAS,0EAA0E,CAAE,GAE7HjB,EAAamB,EAAK,IAAI,EAClBN,EAAc,IAAMM,EAAK,WAC3BP,EAAY,UAAU,IAAI,QAAQ,EAClCK,EAAS,KAAK,CAAE,MAAO,iBAAkB,QAAS,4DAA4D,CAAE,GAEhHL,EAAY,UAAU,OAAO,QAAQ,EAEvCG,EAAS,QAAO,EAChBK,IAEH,OAAQC,EAAO,CACdJ,EAAS,MAAM,CAAE,MAAO,QAAS,QAASI,EAAM,OAAO,CAAE,CAC7D,QAAY,CACRV,EAAO,UAAU,IAAI,QAAQ,CAC9B,CACH,EAEMS,EAAe,IAAM,CACzB,KAAM,CAAE,OAAQE,CAAU,EAAK,SAAS,cAAc,UAAU,EAAE,kBAAkB,wBACpF,OAAO,SAAS,CACd,IAAKA,EAAa,EAClB,SAAU,QACd,CAAG,CACH"}